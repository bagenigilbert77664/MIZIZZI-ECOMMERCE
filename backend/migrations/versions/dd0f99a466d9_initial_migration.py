"""Initial migration

Revision ID: dd0f99a466d9
Revises: 
Create Date: 2025-06-10 20:39:23.161880

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'dd0f99a466d9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('search_user_profiles', schema=None) as batch_op:
        batch_op.drop_index('ix_search_user_profiles_session_id')
        batch_op.drop_index('ix_search_user_profiles_user_id')

    op.drop_table('search_user_profiles')
    with op.batch_alter_table('search_conversions', schema=None) as batch_op:
        batch_op.drop_index('ix_search_conversions_search_query_id')

    op.drop_table('search_conversions')
    with op.batch_alter_table('search_clicks', schema=None) as batch_op:
        batch_op.drop_index('ix_search_clicks_product_id')
        batch_op.drop_index('ix_search_clicks_search_query_id')

    op.drop_table('search_clicks')
    with op.batch_alter_table('search_queries', schema=None) as batch_op:
        batch_op.drop_index('ix_search_queries_converted')
        batch_op.drop_index('ix_search_queries_query_text')
        batch_op.drop_index('ix_search_queries_search_time')
        batch_op.drop_index('ix_search_queries_session_id')
        batch_op.drop_index('ix_search_queries_user_id')

    op.drop_table('search_queries')
    with op.batch_alter_table('search_performance_metrics', schema=None) as batch_op:
        batch_op.drop_index('ix_search_performance_metrics_date')

    op.drop_table('search_performance_metrics')
    with op.batch_alter_table('search_suggestions', schema=None) as batch_op:
        batch_op.drop_index('ix_search_suggestions_brand_id')
        batch_op.drop_index('ix_search_suggestions_category_id')
        batch_op.drop_index('ix_search_suggestions_search_count')
        batch_op.drop_index('ix_search_suggestions_suggestion_text')

    op.drop_table('search_suggestions')
    with op.batch_alter_table('search_trending_topics', schema=None) as batch_op:
        batch_op.drop_index('ix_search_trending_topics_is_active')
        batch_op.drop_index('ix_search_trending_topics_search_volume')
        batch_op.drop_index('ix_search_trending_topics_topic_name')
        batch_op.drop_index('ix_search_trending_topics_trend_score')

    op.drop_table('search_trending_topics')
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.alter_column('shipping_address',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=False)
        batch_op.alter_column('billing_address',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=False)

    with op.batch_alter_table('payment_transactions', schema=None) as batch_op:
        batch_op.alter_column('transaction_metadata',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)

    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.alter_column('transaction_data',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)

    with op.batch_alter_table('product_images', schema=None) as batch_op:
        batch_op.alter_column('filename',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('url',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.drop_constraint('product_images_cloudinary_public_id_key', type_='unique')
        batch_op.drop_column('size_bytes')
        batch_op.drop_column('cloudinary_public_id')
        batch_op.drop_column('format')
        batch_op.drop_column('cloudinary_url')
        batch_op.drop_column('width')
        batch_op.drop_column('cloudinary_secure_url')
        batch_op.drop_column('thumbnail_url')
        batch_op.drop_column('height')

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.alter_column('dimensions',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('specifications',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('customization_options',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.alter_column('images',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('address',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('address',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.alter_column('images',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.alter_column('customization_options',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
        batch_op.alter_column('specifications',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
        batch_op.alter_column('dimensions',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)

    with op.batch_alter_table('product_images', schema=None) as batch_op:
        batch_op.add_column(sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('thumbnail_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('cloudinary_secure_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('width', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('cloudinary_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('format', sa.VARCHAR(length=10), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('cloudinary_public_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('size_bytes', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_unique_constraint('product_images_cloudinary_public_id_key', ['cloudinary_public_id'])
        batch_op.alter_column('url',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('filename',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)

    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.alter_column('transaction_data',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)

    with op.batch_alter_table('payment_transactions', schema=None) as batch_op:
        batch_op.alter_column('transaction_metadata',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.alter_column('billing_address',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False)
        batch_op.alter_column('shipping_address',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False)

    op.create_table('search_trending_topics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('topic_name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('search_volume', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('trend_score', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('date_detected', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('_keywords', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='search_trending_topics_pkey')
    )
    with op.batch_alter_table('search_trending_topics', schema=None) as batch_op:
        batch_op.create_index('ix_search_trending_topics_trend_score', ['trend_score'], unique=False)
        batch_op.create_index('ix_search_trending_topics_topic_name', ['topic_name'], unique=False)
        batch_op.create_index('ix_search_trending_topics_search_volume', ['search_volume'], unique=False)
        batch_op.create_index('ix_search_trending_topics_is_active', ['is_active'], unique=False)

    op.create_table('search_suggestions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('suggestion_text', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('search_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_searched', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('brand_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='search_suggestions_pkey')
    )
    with op.batch_alter_table('search_suggestions', schema=None) as batch_op:
        batch_op.create_index('ix_search_suggestions_suggestion_text', ['suggestion_text'], unique=True)
        batch_op.create_index('ix_search_suggestions_search_count', ['search_count'], unique=False)
        batch_op.create_index('ix_search_suggestions_category_id', ['category_id'], unique=False)
        batch_op.create_index('ix_search_suggestions_brand_id', ['brand_id'], unique=False)

    op.create_table('search_performance_metrics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('total_searches', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('unique_users', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('avg_response_time', sa.NUMERIC(precision=8, scale=3), autoincrement=False, nullable=True),
    sa.Column('zero_results_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('conversion_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_revenue', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='search_performance_metrics_pkey')
    )
    with op.batch_alter_table('search_performance_metrics', schema=None) as batch_op:
        batch_op.create_index('ix_search_performance_metrics_date', ['date'], unique=True)

    op.create_table('search_queries',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('search_queries_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('query_text', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('results_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('clicked_product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('search_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('response_time_ms', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('converted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('_filters_used', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='search_queries_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('search_queries', schema=None) as batch_op:
        batch_op.create_index('ix_search_queries_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_search_queries_session_id', ['session_id'], unique=False)
        batch_op.create_index('ix_search_queries_search_time', ['search_time'], unique=False)
        batch_op.create_index('ix_search_queries_query_text', ['query_text'], unique=False)
        batch_op.create_index('ix_search_queries_converted', ['converted'], unique=False)

    op.create_table('search_clicks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('search_query_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('click_position', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('click_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['search_query_id'], ['search_queries.id'], name='search_clicks_search_query_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='search_clicks_pkey')
    )
    with op.batch_alter_table('search_clicks', schema=None) as batch_op:
        batch_op.create_index('ix_search_clicks_search_query_id', ['search_query_id'], unique=False)
        batch_op.create_index('ix_search_clicks_product_id', ['product_id'], unique=False)

    op.create_table('search_conversions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('search_query_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('conversion_value', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('conversion_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['search_query_id'], ['search_queries.id'], name='search_conversions_search_query_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='search_conversions_pkey'),
    sa.UniqueConstraint('order_id', name='search_conversions_order_id_key')
    )
    with op.batch_alter_table('search_conversions', schema=None) as batch_op:
        batch_op.create_index('ix_search_conversions_search_query_id', ['search_query_id'], unique=False)

    op.create_table('search_user_profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('_search_patterns', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_click_patterns', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_conversion_patterns', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_preferred_categories', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_preferred_brands', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_price_range_preference', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='search_user_profiles_pkey')
    )
    with op.batch_alter_table('search_user_profiles', schema=None) as batch_op:
        batch_op.create_index('ix_search_user_profiles_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_search_user_profiles_session_id', ['session_id'], unique=False)

    # ### end Alembic commands ###
