"""empty message

Revision ID: 6078b820d67e
Revises:
Create Date: 2025-08-28 18:42:50.268881

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6078b820d67e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('search_queries', schema=None) as batch_op:
        # Removed drop_index calls for non-existent indexes
        # batch_op.drop_index('ix_search_queries_session_id')
        # batch_op.drop_index('ix_search_queries_user_id')
        pass

    op.drop_table('search_queries')
    with op.batch_alter_table('search_performance_metrics', schema=None) as batch_op:
        # batch_op.drop_index('ix_search_performance_metrics_date')
        pass

    op.drop_table('search_performance_metrics')

    with op.batch_alter_table('search_trending_topics', schema=None) as batch_op:
        # batch_op.drop_index('ix_search_trending_topics_is_active')
        # batch_op.drop_index('ix_search_trending_topics_search_volume')
        # batch_op.drop_index('ix_search_trending_topics_topic_name')
        # batch_op.drop_index('ix_search_trending_topics_trend_score')
        pass

    op.drop_table('search_trending_topics')
    with op.batch_alter_table('search_suggestions', schema=None) as batch_op:
        # batch_op.drop_index('ix_search_suggestions_brand_id')
        # batch_op.drop_index('ix_search_suggestions_category_id')
        # batch_op.drop_index('ix_search_suggestions_search_count')
        # batch_op.drop_index('ix_search_suggestions_suggestion_text')
        pass

    op.drop_table('search_suggestions')

    with op.batch_alter_table('search_conversions', schema=None) as batch_op:
        # batch_op.drop_index('ix_search_conversions_search_query_id')
        pass

    op.drop_table('search_conversions')
    op.drop_table('order_notes')
    op.drop_table('payment_refunds')
    with op.batch_alter_table('search_user_profiles', schema=None) as batch_op:
        # batch_op.drop_index('ix_search_user_profiles_session_id')
        # batch_op.drop_index('ix_search_user_profiles_user_id')
        pass

    op.drop_table('search_user_profiles')

    with op.batch_alter_table('flutterwave_transactions', schema=None) as batch_op:
        # batch_op.drop_index('ix_flutterwave_transactions_flw_ref')
        # batch_op.drop_index('ix_flutterwave_transactions_transaction_id')
        # batch_op.drop_index('ix_flutterwave_transactions_tx_ref')
        pass

    op.drop_table('flutterwave_transactions')

    with op.batch_alter_table('search_clicks', schema=None) as batch_op:
        # batch_op.drop_index('ix_search_clicks_product_id')
        # batch_op.drop_index('ix_search_clicks_search_query_id')
        pass

    op.drop_table('search_clicks')
    with op.batch_alter_table('admin_activity_logs', schema=None) as batch_op:
        batch_op.alter_column('admin_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('endpoint',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_admin_activity_logs_created_at'), ['created_at'], unique=False)

    with op.batch_alter_table('admin_mfa', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('mpesa_transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('order_id', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('description', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('idempotency_key', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('retry_count', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('error_message', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('mpesa_response', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('callback_response', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('transaction_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('callback_received_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_mpesa_transactions_idempotency_key'), ['idempotency_key'], unique=True)
        batch_op.create_index(batch_op.f('ix_mpesa_transactions_order_id'), ['order_id'], unique=False)
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('order_attachments', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'orders', ['order_id'], ['id'])

    with op.batch_alter_table('order_items', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'orders', ['order_id'], ['id'])

    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'orders', ['order_id'], ['id'])

    with op.batch_alter_table('pesapal_transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('card_type', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('last_four_digits', sa.String(length=4), nullable=True))
        batch_op.add_column(sa.Column('pesapal_receipt_number', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('transaction_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('callback_received_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('expires_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('cancelled_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('last_status_check', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('idempotency_key', sa.String(length=64), nullable=True))
        batch_op.add_column(sa.Column('retry_count', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('error_message', sa.String(length=500), nullable=True))
        batch_op.add_column(sa.Column('pesapal_response', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('callback_response', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('status_response', sa.Text(), nullable=True))
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               nullable=False)
        batch_op.alter_column('currency',
               existing_type=sa.VARCHAR(length=3),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False,
               existing_server_default=sa.text("''::character varying"))
        batch_op.alter_column('phone_number',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=15),
               existing_nullable=True)
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('description',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('pesapal_tracking_id',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('callback_url',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=500),
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               nullable=False,
               existing_server_default=sa.text("'PENDING'::character varying"))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.drop_index('idx_pesapal_status')
        batch_op.drop_index('ix_pesapal_transactions_merchant_reference')
        batch_op.drop_index('ix_pesapal_transactions_order_tracking_id')
        batch_op.drop_index('ix_pesapal_transactions_pesapal_transaction_id')
        batch_op.create_unique_constraint(None, ['merchant_reference'])
        batch_op.create_unique_constraint(None, ['pesapal_tracking_id'])
        batch_op.create_unique_constraint(None, ['idempotency_key'])
        batch_op.drop_column('ipn_data')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('request_data')
        batch_op.drop_column('payment_status')
        batch_op.drop_column('payment_status_reason')
        batch_op.drop_column('payment_status_code')
        batch_op.drop_column('customer_phone')
        batch_op.drop_column('pesapal_merchant_reference')
        batch_op.drop_column('customer_email')
        batch_op.drop_column('transaction_type')
        batch_op.drop_column('payment_status_description')
        batch_op.drop_column('transaction_metadata')
        batch_op.drop_column('order_tracking_id')
        batch_op.drop_column('response_data')
        batch_op.drop_column('confirmation_code')
        batch_op.drop_column('pesapal_transaction_id')
        batch_op.drop_column('payment_account')
        batch_op.drop_column('message')

    with op.batch_alter_table('token_blacklist', schema=None) as batch_op:
        batch_op.alter_column('revoked_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_column('created_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('token_blacklist', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.alter_column('revoked_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('pesapal_transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('payment_account', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('pesapal_transaction_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('confirmation_code', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('response_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('order_tracking_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('transaction_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('payment_status_description', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('transaction_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('customer_email', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('pesapal_merchant_reference', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('customer_phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('payment_status_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('payment_status_reason', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('payment_status', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('request_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ipn_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('ix_pesapal_transactions_pesapal_transaction_id', ['pesapal_transaction_id'], unique=False)
        batch_op.create_index('ix_pesapal_transactions_order_tracking_id', ['order_tracking_id'], unique=False)
        batch_op.create_index('ix_pesapal_transactions_merchant_reference', ['merchant_reference'], unique=False)
        batch_op.create_index('idx_pesapal_status', ['status'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               nullable=True,
               existing_server_default=sa.text("'PENDING'::character varying"))
        batch_op.alter_column('callback_url',
               existing_type=sa.String(length=500),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('pesapal_tracking_id',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('description',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('phone_number',
               existing_type=sa.String(length=15),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False,
               existing_server_default=sa.text("''::character varying"))
        batch_op.alter_column('currency',
               existing_type=sa.VARCHAR(length=3),
               nullable=True)
        batch_op.alter_column('amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.drop_column('status_response')
        batch_op.drop_column('callback_response')
        batch_op.drop_column('pesapal_response')
        batch_op.drop_column('error_message')
        batch_op.drop_column('retry_count')
        batch_op.drop_column('idempotency_key')
        batch_op.drop_column('last_status_check')
        batch_op.drop_column('cancelled_at')
        batch_op.drop_column('expires_at')
        batch_op.drop_column('callback_received_at')
        batch_op.drop_column('transaction_date')
        batch_op.drop_column('pesapal_receipt_number')
        batch_op.drop_column('last_four_digits')
        batch_op.drop_column('card_type')

    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('order_items', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('order_attachments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('mpesa_transactions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_mpesa_transactions_order_id'))
        batch_op.drop_index(batch_op.f('ix_mpesa_transactions_idempotency_key'))
        batch_op.alter_column('id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.drop_column('callback_received_at')
        batch_op.drop_column('transaction_date')
        batch_op.drop_column('callback_response')
        batch_op.drop_column('mpesa_response')
        batch_op.drop_column('error_message')
        batch_op.drop_column('retry_count')
        batch_op.drop_column('idempotency_key')
        batch_op.drop_column('description')
        batch_op.drop_column('order_id')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('admin_mfa', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))

    with op.batch_alter_table('admin_activity_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_admin_activity_logs_created_at'))
        batch_op.alter_column('endpoint',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('admin_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    op.create_table('search_clicks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('search_query_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('click_position', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('click_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['search_query_id'], ['search_queries.id'], name='search_clicks_search_query_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='search_clicks_pkey')
    )
    with op.batch_alter_table('search_clicks', schema=None) as batch_op:
        batch_op.create_index('ix_search_clicks_search_query_id', ['search_query_id'], unique=False)
        batch_op.create_index('ix_search_clicks_product_id', ['product_id'], unique=False)

    op.create_table('flutterwave_transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('payment_transaction_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('flw_ref', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('tx_ref', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('payment_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('processor_response', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('auth_model', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('card_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('card_country', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('card_issuer', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('first_6digits', sa.VARCHAR(length=6), autoincrement=False, nullable=True),
    sa.Column('last_4digits', sa.VARCHAR(length=4), autoincrement=False, nullable=True),
    sa.Column('customer_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('customer_phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('customer_email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('charged_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('app_fee', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('merchant_fee', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('initiate_request', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('initiate_response', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('webhook_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('verify_response', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('initiated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('webhook_received_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_verify_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['payment_transaction_id'], ['payment_transactions.id'], name='flutterwave_transactions_payment_transaction_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='flutterwave_transactions_pkey')
    )
    with op.batch_alter_table('flutterwave_transactions', schema=None) as batch_op:
        batch_op.create_index('ix_flutterwave_transactions_tx_ref', ['tx_ref'], unique=False)
        batch_op.create_index('ix_flutterwave_transactions_transaction_id', ['transaction_id'], unique=False)
        batch_op.create_index('ix_flutterwave_transactions_flw_ref', ['flw_ref'], unique=False)

    op.create_table('search_user_profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('_search_patterns', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_click_patterns', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_conversion_patterns', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_preferred_categories', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_preferred_brands', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_price_range_preference', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='search_user_profiles_pkey')
    )
    with op.batch_alter_table('search_user_profiles', schema=None) as batch_op:
        batch_op.create_index('ix_search_user_profiles_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_search_user_profiles_session_id', ['session_id'], unique=False)

    op.create_table('payment_refunds',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('payment_transaction_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('refund_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('provider_refund_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('PENDING', 'PAID', 'COMPLETED', 'FAILED', 'REFUNDED', name='paymentstatus'), autoincrement=False, nullable=True),
    sa.Column('reason', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('initiated_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('approved_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('provider_response', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('processed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], name='payment_refunds_approved_by_fkey'),
    sa.ForeignKeyConstraint(['initiated_by'], ['users.id'], name='payment_refunds_initiated_by_fkey'),
    sa.ForeignKeyConstraint(['payment_transaction_id'], ['payment_transactions.id'], name='payment_refunds_payment_transaction_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='payment_refunds_pkey'),
    sa.UniqueConstraint('refund_id', name='payment_refunds_refund_id_key')
    )
    op.create_table('order_notes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('note_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('is_customer_visible', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='order_notes_created_by_fkey'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name='order_notes_order_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='order_notes_pkey')
    )
    op.create_table('search_conversions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('search_query_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('conversion_value', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('conversion_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['search_query_id'], ['search_queries.id'], name='search_conversions_search_query_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='search_conversions_pkey'),
    sa.UniqueConstraint('order_id', name='search_conversions_order_id_key')
    )
    with op.batch_alter_table('search_conversions', schema=None) as batch_op:
        batch_op.create_index('ix_search_conversions_search_query_id', ['search_query_id'], unique=False)

    op.create_table('search_suggestions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('suggestion_text', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('search_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_searched', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('brand_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='search_suggestions_pkey')
    )
    with op.batch_alter_table('search_suggestions', schema=None) as batch_op:
        batch_op.create_index('ix_search_suggestions_suggestion_text', ['suggestion_text'], unique=True)
        batch_op.create_index('ix_search_suggestions_search_count', ['search_count'], unique=False)
        batch_op.create_index('ix_search_suggestions_category_id', ['category_id'], unique=False)
        batch_op.create_index('ix_search_suggestions_brand_id', ['brand_id'], unique=False)

    op.create_table('search_trending_topics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('topic_name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('_keywords', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('search_volume', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('trend_score', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('date_detected', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='search_trending_topics_pkey')
    )
    with op.batch_alter_table('search_trending_topics', schema=None) as batch_op:
        batch_op.create_index('ix_search_trending_topics_trend_score', ['trend_score'], unique=False)
        batch_op.create_index('ix_search_trending_topics_topic_name', ['topic_name'], unique=False)
        batch_op.create_index('ix_search_trending_topics_search_volume', ['search_volume'], unique=False)
        batch_op.create_index('ix_search_trending_topics_is_active', ['is_active'], unique=False)

    op.create_table('search_performance_metrics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('total_searches', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('unique_users', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('avg_response_time', sa.NUMERIC(precision=8, scale=3), autoincrement=False, nullable=True),
    sa.Column('zero_results_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('conversion_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_revenue', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='search_performance_metrics_pkey')
    )
    with op.batch_alter_table('search_performance_metrics', schema=None) as batch_op:
        batch_op.create_index('ix_search_performance_metrics_date', ['date'], unique=True)

    op.create_table('search_queries',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('query_text', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('results_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('clicked_product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_filters_used', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('search_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('response_time_ms', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('converted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='search_queries_pkey')
    )
    with op.batch_alter_table('search_queries', schema=None) as batch_op:
        batch_op.create_index('ix_search_queries_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_search_queries_session_id', ['session_id'], unique=False)
        batch_op.create_index('ix_search_queries_search_time', ['search_time'], unique=False)
        batch_op.create_index('ix_search_queries_query_text', ['query_text'], unique=False)
        batch_op.create_index('ix_search_queries_converted', ['converted'], unique=False)

    # ### end Alembic commands ###
